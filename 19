import { useState } from 'react';
import { supabase } from '../lib/supabase';
import { toast } from 'sonner';
import { motion } from 'framer-motion';
import { Loader2, Bot } from 'lucide-react';

type AuthMode = 'signIn' | 'signUp';

const AuthPage = () => {
  const [mode, setMode] = useState<AuthMode>('signIn');
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [loading, setLoading] = useState(false);

  const handleAuth = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);
    try {
      if (mode === 'signUp') {
        const { error } = await supabase.auth.signUp({ email, password });
        if (error) throw error;
        toast.success('Check your email for the confirmation link!');
      } else {
        const { error } = await supabase.auth.signInWithPassword({ email, password });
        if (error) throw error;
        toast.success('Welcome back!');
      }
    } catch (error: any) {
      toast.error(error.error_description || error.message);
    } finally {
      setLoading(false);
    }
  };

  return (
    <motion.div 
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      exit={{ opacity: 0, y: -20 }}
      transition={{ duration: 0.5 }}
      className="min-h-screen flex flex-col items-center justify-center bg-background p-4"
    >
      <div className="w-full max-w-md">
        <div className="text-center mb-8">
          <Bot className="w-16 h-16 mx-auto text-primary mb-4" />
          <h1 className="text-4xl font-bold text-white">Welcome to Luma</h1>
          <p className="text-text-secondary mt-2">Your futuristic AI assistant awaits.</p>
        </div>

        <div className="glass-pane p-8">
          <div className="flex border-b border-border mb-6">
            <button
              onClick={() => setMode('signIn')}
              className={`flex-1 py-3 text-sm font-medium transition-colors ${mode === 'signIn' ? 'text-primary border-b-2 border-primary' : 'text-text-secondary hover:text-white'}`}
            >
              Sign In
            </button>
            <button
              onClick={() => setMode('signUp')}
              className={`flex-1 py-3 text-sm font-medium transition-colors ${mode === 'signUp' ? 'text-primary border-b-2 border-primary' : 'text-text-secondary hover:text-white'}`}
            >
              Sign Up
            </button>
          </div>

          <form onSubmit={handleAuth} className="space-y-6">
            <div>
              <label htmlFor="email" className="block text-sm font-medium text-text-secondary mb-2">Email Address</label>
              <input
                id="email"
                type="email"
                value={email}
                onChange={(e) => setEmail(e.target.value)}
                required
                className="w-full bg-background/50 border border-border rounded-md px-3 py-2 text-white placeholder-text-secondary focus:outline-none focus:ring-2 focus:ring-primary"
                placeholder="you@example.com"
              />
            </div>
            <div>
              <label htmlFor="password" className="block text-sm font-medium text-text-secondary mb-2">Password</label>
              <input
                id="password"
                type="password"
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                required
                minLength={6}
                className="w-full bg-background/50 border border-border rounded-md px-3 py-2 text-white placeholder-text-secondary focus:outline-none focus:ring-2 focus:ring-primary"
                placeholder="••••••••"
              />
            </div>
            <button
              type="submit"
              disabled={loading}
              className="w-full bg-primary text-background font-bold py-3 rounded-md hover:bg-primary-dark transition-all duration-300 flex items-center justify-center disabled:opacity-50 disabled:cursor-not-allowed"
            >
              {loading ? <Loader2 className="animate-spin" /> : (mode === 'signIn' ? 'Sign In' : 'Sign Up')}
            </button>
          </form>
        </div>
        <p className="text-center text-text-secondary text-xs mt-6">
          By signing up, you agree to our Terms of Service and Privacy Policy.
        </p>
      </div>
    </motion.div>
  );
};

export default AuthPage;
