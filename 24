import { Rocket, Cpu, MemoryStick, Battery, Video, X } from 'lucide-react';
import { useState, useEffect } from 'react';
import Modal from '../ui/Modal';
import { Button } from '../ui/Button';

const RightPanel = () => {
    const [systemStatus, setSystemStatus] = useState({ cpu: 24, ram: 58, battery: 92 });
    const [isGoLiveModalOpen, setIsGoLiveModalOpen] = useState(false);
    const [isGoLiveActive, setIsGoLiveActive] = useState(false);

    useEffect(() => {
        const interval = setInterval(() => {
            setSystemStatus({
                cpu: Math.floor(Math.random() * (70 - 20 + 1)) + 20,
                ram: Math.floor(Math.random() * (80 - 40 + 1)) + 40,
                battery: systemStatus.battery > 5 ? systemStatus.battery - 1 : 100,
            });
        }, 3000);
        return () => clearInterval(interval);
    }, [systemStatus.battery]);

    const handleStartGoLive = () => {
        setIsGoLiveModalOpen(false);
        setIsGoLiveActive(true);
    };

    const handleStopGoLive = () => {
        setIsGoLiveActive(false);
    };

  return (
    <>
    <aside className={`w-80 border-l border-border p-6 flex-col space-y-8 hidden lg:flex transition-all duration-300 ${isGoLiveActive ? 'shadow-glow-primary' : ''}`}>
      <div className="glass-pane p-4">
        <h3 className="font-semibold text-text-main mb-3">Go Live</h3>
        <p className="text-sm text-text-secondary mb-4">
            {isGoLiveActive ? "Live session is active." : "Start a live session for screen assistance."}
        </p>
        {isGoLiveActive ? (
            <Button onClick={handleStopGoLive} variant="destructive" className="w-full">
                <X className="w-4 h-4 mr-2" />
                Stop Go Live
            </Button>
        ) : (
            <Button onClick={() => setIsGoLiveModalOpen(true)} className="w-full">
                <Rocket className="w-4 h-4 mr-2" />
                Start Go Live
            </Button>
        )}
      </div>
      <div className="glass-pane p-4">
        <h3 className="font-semibold text-text-main mb-4">System Status</h3>
        <div className="space-y-4">
            <div className="flex items-center space-x-3">
                <Cpu className="w-5 h-5 text-primary" />
                <div className="flex-1">
                    <div className="flex justify-between text-xs text-text-secondary mb-1">
                        <span>CPU</span>
                        <span>{systemStatus.cpu}%</span>
                    </div>
                    <div className="w-full bg-background rounded-full h-1.5">
                        <div className="bg-primary h-1.5 rounded-full" style={{width: `${systemStatus.cpu}%`}}></div>
                    </div>
                </div>
            </div>
            <div className="flex items-center space-x-3">
                <MemoryStick className="w-5 h-5 text-primary" />
                <div className="flex-1">
                    <div className="flex justify-between text-xs text-text-secondary mb-1">
                        <span>RAM</span>
                        <span>{systemStatus.ram}%</span>
                    </div>
                    <div className="w-full bg-background rounded-full h-1.5">
                        <div className="bg-primary h-1.5 rounded-full" style={{width: `${systemStatus.ram}%`}}></div>
                    </div>
                </div>
            </div>
            <div className="flex items-center space-x-3">
                <Battery className="w-5 h-5 text-primary" />
                <div className="flex-1">
                    <div className="flex justify-between text-xs text-text-secondary mb-1">
                        <span>Battery</span>
                        <span>{systemStatus.battery}%</span>
                    </div>
                    <div className="w-full bg-background rounded-full h-1.5">
                        <div className="bg-primary h-1.5 rounded-full" style={{width: `${systemStatus.battery}%`}}></div>
                    </div>
                </div>
            </div>
        </div>
      </div>
    </aside>
    <Modal isOpen={isGoLiveModalOpen} onClose={() => setIsGoLiveModalOpen(false)} title="Go Live Permission">
        <div className="text-center">
            <Video size={48} className="mx-auto text-primary mb-4" />
            <h4 className="text-lg font-semibold text-text-main mb-2">Luma needs your permission</h4>
            <p className="text-sm text-text-secondary mb-6">To provide live assistance, Luma needs to view your screen. This session will not be recorded. You can stop sharing at any time.</p>
            <div className="flex justify-center space-x-4">
                <Button variant="ghost" onClick={() => setIsGoLiveModalOpen(false)}>Cancel</Button>
                <Button onClick={handleStartGoLive}>Allow</Button>
            </div>
        </div>
    </Modal>
    </>
  );
};

export default RightPanel;
