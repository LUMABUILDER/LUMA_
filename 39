import { useState, useRef } from 'react';
import { motion } from 'framer-motion';
import { Plus, FolderKanban, Loader2 } from 'lucide-react';
import { useMedia } from '../hooks/useMedia';
import { Button } from '../components/ui/Button';
import MediaItem from '../components/media/MediaItem';

const MediaPage = () => {
  const { media, loading, uploadMedia, deleteMedia } = useMedia();
  const [uploading, setUploading] = useState(false);
  const fileInputRef = useRef<HTMLInputElement>(null);

  const handleFileSelect = async (event: React.ChangeEvent<HTMLInputElement>) => {
    const files = event.target.files;
    if (!files || files.length === 0) return;

    setUploading(true);
    try {
      await Promise.all(Array.from(files).map(file => uploadMedia(file)));
    } finally {
      setUploading(false);
      // Reset file input
      if(fileInputRef.current) {
        fileInputRef.current.value = "";
      }
    }
  };

  const triggerFileInput = () => {
    fileInputRef.current?.click();
  };

  return (
    <motion.div
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      className="p-8 w-full h-full flex flex-col"
    >
      <div className="flex items-center justify-between mb-8">
        <h2 className="text-3xl font-bold text-white">Media</h2>
        <Button onClick={triggerFileInput} loading={uploading}>
          <Plus className="mr-2 h-4 w-4" /> {uploading ? 'Uploading...' : 'Upload File'}
        </Button>
        <input
          type="file"
          ref={fileInputRef}
          onChange={handleFileSelect}
          className="hidden"
          multiple
        />
      </div>

      {loading ? (
        <div className="flex-1 flex items-center justify-center">
            <Loader2 className="w-8 h-8 text-primary animate-spin" />
        </div>
      ) : media.length === 0 ? (
        <div className="flex-1 flex flex-col items-center justify-center text-center">
          <FolderKanban className="w-24 h-24 text-primary/30 mb-6" />
          <h3 className="text-xl font-semibold text-white">No media yet</h3>
          <p className="text-text-secondary">Click 'Upload File' to add your first one.</p>
        </div>
      ) : (
        <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-4 overflow-y-auto pr-2">
          {media.map(file => (
            <MediaItem key={file.id} file={file} onDelete={deleteMedia} />
          ))}
        </div>
      )}
    </motion.div>
  );
};

export default MediaPage;
