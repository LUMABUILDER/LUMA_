import { motion } from 'framer-motion';
import { useTheme } from '../contexts/ThemeContext';
import { Sun, Moon, Trash2, Link, CheckCircle, Languages } from 'lucide-react';
import { Button } from '../components/ui/Button';
import { useAuth } from '../contexts/AuthContext';
import { useState } from 'react';
import Modal from '../components/ui/Modal';
import { useProfile } from '../contexts/ProfileContext';

const GlobalLinkService = ({ name, icon, isConnectedInitially = false }: { name: string, icon: React.ElementType, isConnectedInitially?: boolean }) => {
    const [isConnected, setIsConnected] = useState(isConnectedInitially);
    const [isLoading, setIsLoading] = useState(false);
    const Icon = icon;

    const handleConnect = () => {
        setIsLoading(true);
        setTimeout(() => {
            setIsConnected(true);
            setIsLoading(false);
        }, 1500);
    };

    return (
        <div className="flex items-center justify-between p-3 rounded-lg hover:bg-background-light/50">
            <div className="flex items-center space-x-3">
                <Icon className="w-6 h-6 text-text-secondary" />
                <span className="text-text-main">{name}</span>
            </div>
            {isConnected ? (
                <div className="flex items-center space-x-2 text-green-500 text-sm">
                    <CheckCircle size={16} />
                    <span>Connected</span>
                </div>
            ) : (
                <Button size="sm" variant="secondary" onClick={handleConnect} loading={isLoading}>
                    Connect
                </Button>
            )}
        </div>
    );
};

const SettingsPage = () => {
  const { theme, setTheme } = useTheme();
  const { deleteCurrentUserAccount } = useAuth();
  const { profile, updateProfile } = useProfile();
  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);
  const [deleteLoading, setDeleteLoading] = useState(false);

  const handleThemeToggle = () => {
    setTheme(theme === 'dark' ? 'light' : 'dark');
  };

  const handleDeleteAccount = async () => {
    setDeleteLoading(true);
    await deleteCurrentUserAccount();
  };

  const handleLanguageChange = (e: React.ChangeEvent<HTMLSelectElement>) => {
    const newLang = e.target.value as 'English' | 'Hindi' | 'French';
    updateProfile({ language: newLang });
  };

  return (
    <>
      <motion.div
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        className="p-8 w-full h-full flex flex-col overflow-y-auto"
      >
        <h2 className="text-3xl font-bold text-text-main mb-8">Settings</h2>
        <div className="max-w-3xl mx-auto w-full space-y-8">
            <div className="glass-pane p-6">
                <h3 className="font-semibold text-text-main mb-4">General</h3>
                <div className="flex items-center justify-between mb-4">
                    <p className="text-text-secondary">Theme</p>
                    <button onClick={handleThemeToggle} className="flex items-center space-x-2 p-2 rounded-full bg-background-light/50 border border-border">
                        <Sun className={`w-5 h-5 transition-colors ${theme === 'light' ? 'text-primary' : 'text-text-secondary'}`} />
                        <Moon className={`w-5 h-5 transition-colors ${theme === 'dark' ? 'text-primary' : 'text-text-secondary'}`} />
                    </button>
                </div>
                <div className="flex items-center justify-between">
                    <p className="text-text-secondary">Language</p>
                    <select
                        value={profile?.language || 'English'}
                        onChange={handleLanguageChange}
                        className="bg-background-light border border-border rounded-md px-3 py-2 text-text-main focus:outline-none focus:ring-2 focus:ring-primary"
                    >
                        <option value="English">English</option>
                        <option value="Hindi">हिन्दी (Hindi)</option>
                        <option value="French">Français (French)</option>
                    </select>
                </div>
            </div>

            <div className="glass-pane p-6">
                <h3 className="font-semibold text-text-main mb-4 flex items-center space-x-2"><Link size={20} /> <span>GlobalLink Mode</span></h3>
                <p className="text-sm text-text-secondary mb-4">Connect your accounts to create a unified AI brain. (Simulation)</p>
                <div className="space-y-2">
                    <GlobalLinkService name="Google Calendar" icon={Sun} isConnectedInitially />
                    <GlobalLinkService name="Gmail" icon={Moon} />
                    <GlobalLinkService name="Spotify" icon={Sun} />
                </div>
            </div>
            
            <div className="glass-pane p-6 border border-red-500/30">
                <h3 className="font-semibold text-red-400 mb-4">Danger Zone</h3>
                <div className="flex items-center justify-between">
                    <div>
                        <p className="text-text-main font-medium">Delete Account</p>
                        <p className="text-text-secondary text-sm">Permanently delete your account and all associated data.</p>
                    </div>
                    <Button variant="destructive" onClick={() => setIsDeleteModalOpen(true)}>
                        <Trash2 className="mr-2 h-4 w-4" /> Delete
                    </Button>
                </div>
            </div>
        </div>
      </motion.div>
      <Modal isOpen={isDeleteModalOpen} onClose={() => setIsDeleteModalOpen(false)} title="Delete Account">
        <div className="text-center">
            <Trash2 size={48} className="mx-auto text-red-500 mb-4" />
            <h4 className="text-lg font-semibold text-text-main mb-2">Are you absolutely sure?</h4>
            <p className="text-sm text-text-secondary mb-6">This action cannot be undone. This will permanently delete your account, chat history, notes, reminders, and all uploaded media.</p>
            <div className="flex justify-center space-x-4">
                <Button variant="ghost" onClick={() => setIsDeleteModalOpen(false)}>Cancel</Button>
                <Button variant="destructive" onClick={handleDeleteAccount} loading={deleteLoading}>
                    I understand, delete my account
                </Button>
            </div>
        </div>
      </Modal>
    </>
  );
};

export default SettingsPage;
